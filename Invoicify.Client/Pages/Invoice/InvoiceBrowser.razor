@page "/Invoice/Browser"
@using Data
@using Data.Bags
@using Data.DbModel
@using FileGenerator
@using Invoicify.Client.BlazorComponents
@using Invoicify.Client.Invoices
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JS


<PageTitle>Invoice Browser</PageTitle>
<h3>Invoice Browser</h3>

<span>
    <div>
        <h4>Invoices:</h4>
        <InteractiveTable TItem="InvoiceBag" Items="_invoices" @bind-SelectedItems="_selected" MultipleSelection="false"
                          Columns="cols" OnRowClick="@_GetInvoiceInfo"/>
    </div>
    <div>
        @if (_selectedInvoice is not null) {
            <div>
                <h4>Selected invoice: @_selectedInvoice.Number</h4>
            </div>
            <div>
                <input type="button" value="See HTML" @onclick="_GenerateHtml"/>
            </div>
            <ul>
                <li>Seller: @_selectedInvoice.SellerInfo.FullName</li>
                <li>Customer: @_selectedInvoice.CustomerInfo.FullName</li>
                <li>Variable Symbol: @_selectedInvoice.VariableSymbol</li>
                <li>Account: @_selectedInvoice.BankInfo.Account/@_selectedInvoice.BankInfo.BankNumber</li>
                
                <li>Issue Date: @_selectedInvoice.IssueDate.ToLongDateString()</li>
                <li>Due Date: @_selectedInvoice.DueDate.ToLongDateString()</li>
                
                <li>Items:</li>
                <div>
                    <ol>
                    @foreach(var item in _selectedInvoice.Items) {
                        <li>Item:   @item.Name</li>
                        <ul>
                            <li>Description:    @item.Description</li>
                            <li>Quantity:   @item.Quantity</li> 
                            <li>Unit Price: @item.PricePerUnit</li>
                            <li>Total Price:    @item.TotalPrice</li>
                        </ul>
                    }
                    </ol>
                </div>
            </ul>
        }
    </div>
</span>

@code {
    private Invoice? _selectedInvoice;

    private readonly Dictionary<string, string?> cols;
    
    private List<InvoiceBag> _invoices = [];
    private HashSet<InvoiceBag> _selected = [];
    
    protected override async Task OnInitializedAsync() {
        _invoices = await HelperMethods.GetRemoteObjectsAsync<InvoiceBag>(Http, "asbag/invoice?top=2");
        await base.OnInitializedAsync();
    }

    private async Task _GetInvoiceInfo(InvoiceBag item) {
        _selectedInvoice = await HelperMethods.GetRemoteObjectAsync<Invoice>(Http, $"/invoice/{item.Id}");
    }

    private async Task _GenerateHtml() {
        if (_selectedInvoice is null)
            return;
        
        if(_selectedInvoice.QrSpr is not null)
            _selectedInvoice.QrPayment = QrPayment.FromSpdString(_selectedInvoice.QrSpr);
        
        var generator = new DocumentGenerator<InvoiceView>(_selectedInvoice);
        var html = await generator.GetHtmlAsync();
        await JS.InvokeVoidAsync("openHtmlInNewTab", html);
    }
}

