@using Data.DbModel

@code {
    [CascadingParameter] public EditContext EditContext { get; set; }
    [Parameter] public Invoice Invoice { get; set; }
    
    private DateOnly TODAY => DateOnly.FromDateTime(DateTime.Now);
    private DateOnly DUE => TODAY.AddDays(14);


    // protected override Task OnInitializedAsync() {
    //     Invoice.Currency = "CZK";
    //     Invoice.Number = $"10{TODAY.Month:D2}000";
    //     Invoice.VariableSymbol = Invoice.Number;
    //     Invoice.IssueDate = TODAY;
    //     Invoice.DueDate = DUE;
    //     
    //     return base.OnInitializedAsync();
    // }

    private void Notify(object model, string name) {
        EditContext.NotifyFieldChanged(
            new FieldIdentifier(model, name)
        );
        StateHasChanged(); //todo Query sent only onchange, not oninput
    }
    
    private void Number2VariableSymbol(ChangeEventArgs e) {
        var val = e.Value?.ToString();
        Invoice.VariableSymbol = val?.Length <= 10 ? val : val?[..10];
        
        Notify(Invoice, nameof(Invoice.Number));
        Notify(Invoice, nameof(Invoice.VariableSymbol));
    }

    private void Clear() {
        Invoice.Number = "";
        Invoice.VariableSymbol = "";
        Invoice.IssueDate = TODAY;
        Invoice.DueDate = DUE;
    }
}

<div class="component-div form-div">
    <div class="component-input-header">
        <h4>Invoice Details</h4>
        <button type="button" class="btn btn-danger btn-clear" @onclick="Clear">Clear</button>
    </div>
    <div class="component-input-row">
        <label>Number:</label>
        <InputText 
            @bind-Value="Invoice.Number" 
            @oninput="_ => Notify(Invoice, nameof(Invoice.Number))" 
            class="form-control"/>
    </div>
    <div class="component-input-row">
        <label>Currency:</label>
        <InputText 
            @bind-Value="Invoice.Currency" 
            @oninput="_ => Notify(Invoice, nameof(Invoice.Currency))"
            class="form-control"/>
    </div>
    <div class="component-input-row">
        <label>Variable Symbol:</label>
        <InputText 
            @bind-Value="Invoice.VariableSymbol" 
            @oninput="_ => Notify(Invoice, nameof(Invoice.VariableSymbol))"
            class="form-control"/>
    </div>
    <div class="component-input-row">
        <label>Issue Date:</label>
        <InputDate
            @bind-Value="Invoice.IssueDate"
            @oninput="_ => Notify(Invoice, nameof(Invoice.IssueDate))"
            class="form-control"/>
    </div>
    <div class="component-input-row">
        <label>Due Date:</label>
        <InputDate
            @bind-Value="Invoice.DueDate"
            @oninput="_ => Notify(Invoice, nameof(Invoice.DueDate))"
            class="form-control"/>
    </div>
</div>